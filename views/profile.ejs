<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile - MasterHosting</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .profile-container {
            max-width: 800px;
            margin: 100px auto 50px;
            padding: 20px;
        }
        
        .profile-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 30px;
        }
        
        .profile-picture-section {
            position: relative;
            display: inline-block;
            margin-bottom: 20px;
        }
        
        .profile-picture {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid white;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }
        
        .edit-profile-btn {
            background: #667eea;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 15px;
            transition: all 0.3s;
        }
        
        .edit-profile-btn:hover {
            background: #764ba2;
        }
        
        .edit-form {
            display: none;
            margin-top: 20px;
        }
        
        .edit-form.active {
            display: block;
        }
        
        .profile-info {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .profile-info h2 {
            color: #667eea;
            margin-bottom: 20px;
        }
        
        .info-row {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }
        
        .info-row:last-child {
            border-bottom: none;
        }
        
        .info-label {
            font-weight: 600;
            color: #666;
        }
        
        .info-value {
            color: #333;
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }
        
        .loading-overlay.active {
            display: flex;
        }
        
        .loading-content {
            background: white;
            padding: 30px;
            border-radius: 10px;
            text-align: center;
        }
        
        .loading-content i {
            font-size: 3rem;
            color: #667eea;
            margin-bottom: 15px;
        }
        
        .upload-progress {
            width: 300px;
            height: 10px;
            background: #eee;
            border-radius: 5px;
            overflow: hidden;
            margin: 15px 0;
        }
        
        .upload-progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
            width: 0%;
            transition: width 0.3s;
        }
        
        .success-message, .error-message {
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        
        .success-message {
            background: #d4edda;
            color: #155724;
        }
        
        .error-message {
            background: #f8d7da;
            color: #721c24;
        }
        
        .no-access {
            text-align: center;
            padding: 100px 20px;
        }
        
        .no-access h2 {
            color: #dc3545;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="container">
            <div class="nav-wrapper">
                <a href="/" class="logo">
                    <i class="fas fa-server"></i>
                    <span>MasterHosting</span>
                </a>
                
                <ul class="nav-menu">
                    <li><a href="/">Home</a></li>
                    <li><a href="/about">About</a></li>
                    <li><a href="/contact">Contact</a></li>
                    <li><a href="/profile">Profile</a></li>
                </ul>
                
                <div class="auth-section">
                    <div id="userInfo" class="user-info" style="display: none;">
                        <img id="userPhoto" src="" alt="User" class="user-photo">
                        <div class="user-details">
                            <span id="userName" class="user-name"></span>
                            <button onclick="signOutUser()" class="btn-logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div id="loadingScreen" class="loading">
        <i class="fas fa-spinner fa-spin fa-3x"></i>
        <p>Loading profile...</p>
    </div>

    <div id="noAccessScreen" class="no-access" style="display: none;">
        <h2><i class="fas fa-lock"></i> Please Login</h2>
        <p>You must be logged in to view your profile.</p>
        <a href="/login" class="btn btn-primary">Login</a>
    </div>

    <div id="profileContent" class="profile-container" style="display: none;">
        <div class="profile-header">
            <div class="profile-picture-section">
                <img id="profilePicture" src="https://ui-avatars.com/api/?name=User&background=667eea&color=fff&size=150" alt="Profile Picture" class="profile-picture">
            </div>
            <h1 id="profileName">User</h1>
            <p id="profileEmail">user@example.com</p>
        </div>

        <div id="messageContainer"></div>

        <div class="profile-info">
            <h2><i class="fas fa-user"></i> Account Information</h2>
            <div class="info-row">
                <span class="info-label">Email:</span>
                <span class="info-value" id="infoEmail">-</span>
            </div>
            <div class="info-row">
                <span class="info-label">User ID:</span>
                <span class="info-value" id="infoUserId">-</span>
            </div>
            <div class="info-row">
                <span class="info-label">Account Created:</span>
                <span class="info-value" id="infoCreated">-</span>
            </div>
            <div class="info-row">
                <span class="info-label">Last Sign In:</span>
                <span class="info-value" id="infoLastSignIn">-</span>
            </div>
            <div class="info-row">
                <span class="info-label">Account Status:</span>
                <span class="info-value" style="color: #28a745; font-weight: 600;">
                    <i class="fas fa-check-circle"></i> Active
                </span>
            </div>
        </div>
    </div>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <div class="footer-col">
                    <h4>MasterHosting</h4>
                    <p>Free, reliable website hosting for everyone.</p>
                </div>
            </div>
            <div class="footer-bottom">
                <p>&copy; 2025 MasterHosting. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script type="module" src="/js/firebase-config.js"></script>
    <script src="/js/main.js"></script>
    
    <script type="module">
    import { getAuth, onAuthStateChanged } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-auth.js';
    import { getFirestore, doc, setDoc, getDoc } from 'https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js';

    function waitForFirebase() {
        return new Promise((resolve) => {
            const check = () => {
                if (window.firebaseAuth && window.firebaseDB) {
                    resolve({
                        auth: window.firebaseAuth,
                        db: window.firebaseDB
                    });
                } else {
                    setTimeout(check, 100);
                }
            };
            check();
        });
    }

    const { auth, db } = await waitForFirebase();

    onAuthStateChanged(auth, async (user) => {
        const loadingScreen = document.getElementById('loadingScreen');
        const noAccessScreen = document.getElementById('noAccessScreen');
        const profileContent = document.getElementById('profileContent');
        
        if (!user) {
            loadingScreen.style.display = 'none';
            noAccessScreen.style.display = 'block';
            return;
        }
        
        loadingScreen.style.display = 'none';
        profileContent.style.display = 'block';
        
        await loadUserProfile(user);
    });

    async function loadUserProfile(user) {
        document.getElementById('profileName').textContent = user.displayName || user.email.split('@')[0];
        document.getElementById('profileEmail').textContent = user.email;
        document.getElementById('infoEmail').textContent = user.email;
        document.getElementById('infoUserId').textContent = user.uid;
        document.getElementById('infoCreated').textContent = user.metadata.creationTime || 'N/A';
        document.getElementById('infoLastSignIn').textContent = user.metadata.lastSignInTime || 'N/A';
        
        // Use default avatar
        document.getElementById('profilePicture').src = `https://ui-avatars.com/api/?name=${encodeURIComponent(user.email)}&background=667eea&color=fff&size=150`;
        
        try {
            const userDoc = await getDoc(doc(db, 'users', user.uid));
            if (userDoc.exists()) {
                const userData = userDoc.data();
                console.log('User data loaded from Firestore:', userData);
            } else {
                // Create user document if it doesn't exist
                await setDoc(doc(db, 'users', user.uid), {
                    email: user.email,
                    createdAt: user.metadata.creationTime,
                    lastSignIn: user.metadata.lastSignInTime,
                    role: 'user'
                });
                console.log('User document created in Firestore');
            }
        } catch (error) {
            console.error('Error loading profile:', error);
        }
    }
    </script>
</body>
</html>
